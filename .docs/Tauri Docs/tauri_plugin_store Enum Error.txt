#[non_exhaustive]
pub enum Error {
    Serialize(Box<dyn Error + Send + Sync>),
    Deserialize(Box<dyn Error + Send + Sync>),
    Json(Error),
    Io(Error),
    SerializeFunctionNotFound(String),
    DeserializeFunctionNotFound(String),
    Tauri(Error),
}

The error types.
Variants (Non-exhaustive)
This enum is marked as non-exhaustive
Serialize(Box<dyn Error + Send + Sync>)
Deserialize(Box<dyn Error + Send + Sync>)
Json(Error)

JSON error.
Io(Error)

IO error.
SerializeFunctionNotFound(String)

Serialize function not found
DeserializeFunctionNotFound(String)

Deserialize function not found
Tauri(Error)

Some Tauri API failed
Trait Implementations
Source
impl Debug for Error
Source
fn fmt(&self, f: &mut Formatter<'_>) -> Result
Formats the value using the given formatter. Read more
Source
impl Display for Error
Source
fn fmt(&self, __formatter: &mut Formatter<'_>) -> Result
Formats the value using the given formatter. Read more
Source
impl Error for Error
Source
fn source(&self) -> Option<&(dyn Error + 'static)>
Returns the lower-level source of this error, if any. Read more
1.0.0 Â· Source
fn description(&self) -> &str
ðŸ‘ŽDeprecated since 1.42.0: use the Display impl or to_string()
Read more
1.0.0 Â· Source
fn cause(&self) -> Option<&dyn Error>
ðŸ‘ŽDeprecated since 1.33.0: replaced by Error::source, which can support downcasting
Source
fn provide<'a>(&'a self, request: &mut Request<'a>)
ðŸ”¬This is a nightly-only experimental API. (error_generic_member_access)
Provides type-based access to context intended for error reports. Read more
Source
impl From<Error> for Error
Source
fn from(source: Error) -> Self
Converts to this type from the input type.
Source
impl From<Error> for Error
Source
fn from(source: Error) -> Self
Converts to this type from the input type.
Source
impl From<Error> for Error
Source
fn from(source: Error) -> Self
Converts to this type from the input type.
Source
impl Serialize for Error
Source
fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
where
    S: Serializer,
Serialize this value into the given Serde serializer. Read more
Auto Trait Implementations
impl Freeze for Error
impl !RefUnwindSafe for Error
impl Send for Error
impl Sync for Error
impl Unpin for Error
impl !UnwindSafe for Error
Blanket Implementations
Source
impl<T> Any for T
where
    T: 'static + ?Sized,
Source
fn type_id(&self) -> TypeId
Gets the TypeId of self. Read more
Source
impl<T> Borrow<T> for T
where
    T: ?Sized,
Source
fn borrow(&self) -> &T
Immutably borrows from an owned value. Read more
Source
impl<T> BorrowMut<T> for T
where
    T: ?Sized,
Source
fn borrow_mut(&mut self) -> &mut T
Mutably borrows from an owned value. Read more
Source
impl<T> From<T> for T
Source
fn from(t: T) -> T

Returns the argument unchanged.
Source
impl<T> Instrument for T
Source
fn instrument(self, span: Span) -> Instrumented<Self>
Instruments this type with the provided Span, returning an Instrumented wrapper. Read more
Source
fn in_current_span(self) -> Instrumented<Self>
Instruments this type with the current Span, returning an Instrumented wrapper. Read more
Source
impl<T, U> Into<U> for T
where
    U: From<T>,
Source
fn into(self) -> U

Calls U::from(self).

That is, this conversion is whatever the implementation of From<T> for U chooses to do.
Source
impl<T> IpcResponse for T
where
    T: Serialize,
Source
fn body(self) -> Result<InvokeResponseBody, Error>
Resolve the IPC response body.
Source
impl<T> Serialize for T
where
    T: Serialize + ?Sized,
Source
fn erased_serialize(&self, serializer: &mut dyn Serializer) -> Result<(), Error>
Source
fn do_erased_serialize(
    &self,
    serializer: &mut dyn Serializer,
) -> Result<(), ErrorImpl>
Source
impl<T> ToString for T
where
    T: Display + ?Sized,
Source
default fn to_string(&self) -> String
Converts the given value to a String. Read more
Source
impl<T, U> TryFrom<U> for T
where
    U: Into<T>,
Source
type Error = Infallible
The type returned in the event of a conversion error.
Source
fn try_from(value: U) -> Result<T, <T as TryFrom<U>>::Error>
Performs the conversion.
Source
impl<T, U> TryInto<U> for T
where
    U: TryFrom<T>,
Source
type Error = <U as TryFrom<T>>::Error
The type returned in the event of a conversion error.
Source
fn try_into(self) -> Result<U, <U as TryFrom<T>>::Error>
Performs the conversion.
Source
impl<T> WithSubscriber for T
Source
fn with_subscriber<S>(self, subscriber: S) -> WithDispatch<Self>
where
    S: Into<Dispatch>,
Attaches the provided Subscriber to this type, returning a WithDispatch wrapper. Read more
Source
fn with_current_subscriber(self) -> WithDispatch<Self>
Attaches the current default Subscriber to this type, returning a WithDispatch wrapper. Read more
Source
impl<T> ErasedDestructor for T
where
    T: 'static,
Source
impl<T> MaybeSendSync for T
